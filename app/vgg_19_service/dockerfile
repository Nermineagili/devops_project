# Use a slim Python base image
FROM python:3.10-slim as builder

# Disable Python bytecode generation
ENV PYTHONDONTWRITEBYTECODE=1

# Set working directory inside the container
WORKDIR /app

# Install required system dependencies only for building
RUN apt-get update && apt-get install -y --no-install-recommends \
    build-essential \
    libopenblas-dev \
    liblapack-dev \
    python3-dev \
    gfortran \
    && apt-get clean && rm -rf /var/lib/apt/lists/*

# Upgrade pip to the latest version to avoid compatibility issues
RUN python -m pip install --upgrade pip

# Copy the requirements file to the container
COPY requirements.txt .

# Install Python dependencies without cache in builder stage
RUN python -m pip install --no-cache-dir -r requirements.txt

# Production image: minimal dependencies
FROM python:3.10-slim

# Set working directory inside the container
WORKDIR /app

# Copy dependencies from the builder stage
COPY --from=builder /usr/local/lib/python3.10 /usr/local/lib/python3.10
COPY --from=builder /usr/local/bin /usr/local/bin

# Copy the application code to the container
COPY . .

# Expose the port used by the Flask app
EXPOSE 8000

# Start the Flask app
CMD ["python", "vgg_service.py"]
